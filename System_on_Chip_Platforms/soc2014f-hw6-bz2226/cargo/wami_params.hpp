// DO NOT EDIT THIS FILE!

#include <systemc.h>

#ifndef _WAMI_PARAMS_H_
#define _WAMI_PARAMS_H_

typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

class rgb_pixel
{
public:
	rgb_pixel() {
		r = 0;
		g = 0;
		b = 0;
	}

	bool operator == (const rgb_pixel &rhs) const
	{
		if (rhs.r == r && rhs.g == g && rhs.b ==b)
			return true;
		else
			return false;
	}

	friend void sc_trace(sc_trace_file *tf, const rgb_pixel &v,
			const std::string &NAME)
        {
		std::string idr("-r");
		std::string idg("-g");
		std::string idb("-b");
		sc_trace(tf, v.r, NAME + idr);
		sc_trace(tf, v.r, NAME + idg);
		sc_trace(tf, v.r, NAME + idb);
	}

        friend ostream& operator << (ostream& os, rgb_pixel const &v)
        {
		os << std::hex << "0x" << v.r << ", 0x" << v.g << ", 0x" << v.b << std::dec;
                return os;
        }


	u16 r, g, b;
};


/*
 * DEBAYER_SIZE: this debayer implementation can only process squared images
 * of size (DEBAYER_SIZE x DEBAYER_SIZE) pixels or smaller.
 * This constant determines the size of the accelerator's scratchpad while
 * the actual size of the image to process is passed through a configuration
 * register.
 */

#ifndef DEBAYER_SIZE
#define DEBAYER_SIZE 128 // Smaller buffer for faster simulation
#endif

#define WAMI_DEBAYER_IMG_NUM_ROWS DEBAYER_SIZE
#define WAMI_DEBAYER_IMG_NUM_COLS DEBAYER_SIZE

/*
 * WAMI_DEBAYER_PAD: The number of edge pixels clipped during the
 * debayer process due to not having enough pixels for the full
 * interpolation kernel. Other interpolations could be applied near
 * the edges, but we instead clip the image for simplicity.
 */
#define WAMI_DEBAYER_PAD 2

/* Shorten the name of the Debayer consts for readability */
#define IMG_NUM_ROWS WAMI_DEBAYER_IMG_NUM_ROWS
#define IMG_NUM_COLS WAMI_DEBAYER_IMG_NUM_COLS
#define PAD WAMI_DEBAYER_PAD

#endif
